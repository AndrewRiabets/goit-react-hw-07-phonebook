{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","services/phonebook-api.js","redux/Phonebook/contacts-operations.js","Components/ContactForm/ContactForm.js","Loader/Loader.js","redux/selectors.js","Components/ContactList/ContactList.jsx","redux/Phonebook/phonebook-actions.js","Components/Filter/Filter.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsAPI","a","axios","get","data","addContactAPI","o","post","deleteContactsAPI","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","contacts","addContact","cont","deleteContact","connect","dispatch","onSubmit","name","number","useState","setName","setNumber","useDispatch","handleInputChange","e","currentTarget","value","preventDefault","uuidv4","className","style","input__field","onChange","type","pattern","title","required","form__button","LoaderSpin","color","height","width","getLoading","state","loading","getFilteredContacts","allContacts","filter","toLocaleLowerCase","includes","items","fetchContactsAll","isLoading","useSelector","useEffect","contacts__list","map","contacts__item","contacts__btn","onClick","changeFilter","createAction","App","createReducer","fulfilled","_","payload","console","log","some","alert","pending","rejected","combineReducers","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a03a483f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__field\":\"ContactForm_input__field__AMKZ9\",\"form__button\":\"ContactForm_form__button__OkADM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__Oc1oH\",\"contacts__item\":\"ContactList_contacts__item__1nbEP\",\"contacts__btn\":\"ContactList_contacts__btn__njvtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__field\":\"Filter_input__field__1rDMp\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = '61978bf75953f10017d23de7.mockapi.io';\r\n\r\nexport async function fetchContactsAPI() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContactAPI(o) {\r\n  const { data } = await axios.post('/contacts', o);\r\n  return data;\r\n}\r\nexport async function deleteContactsAPI(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsAPI,\r\n  addContactAPI,\r\n  deleteContactsAPI,\r\n} from '../../services/phonebook-api';\r\n\r\naxios.defaults.baseURL = 'https://61978bf75953f10017d23de7.mockapi.io/api/';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    const contacts = await fetchContactsAPI();\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/сontactsGlobal',\r\n  async cont => {\r\n    const contacts = await addContactAPI(cont);\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async id => {\r\n    await deleteContactsAPI(id);\r\n    return id;\r\n  },\r\n);\r\n","import { useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport style from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/Phonebook/contacts-operations';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    if (name === 'name') {\r\n      setName(value);\r\n    } else setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: name,\r\n      number: number,\r\n      id: uuidv4(),\r\n    };\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className={style.input__field}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={style.input__field}\r\n            onChange={handleInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={style.form__button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import Loader from 'react-loader-spinner';\r\nexport default function LoaderSpin() {\r\n  //other logic\r\n\r\n  return (\r\n    <Loader\r\n      className=\"loader\"\r\n      type=\"Audio\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n    />\r\n  );\r\n}\r\n","export const getContacts = state => state.contacts.phonebookContacts;\r\nexport const getLoading = state => state.contacts.loading;\r\n","import style from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  deleteContact,\r\n  fetchContacts,\r\n} from '../../redux/Phonebook/contacts-operations';\r\nimport LoaderSpin from '../../Loader/Loader';\r\nimport { getLoading } from '../../redux/selectors';\r\n\r\nconst ContactList = ({ contacts, deleteContact, fetchContactsAll }) => {\r\n  const isLoading = useSelector(getLoading);\r\n  useEffect(() => {\r\n    fetchContactsAll();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderSpin />}\r\n      <ul className={style.contacts__list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={style.contacts__item}>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <button\r\n              className={style.contacts__btn}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete contact\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n  fetchContactsAll: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter');\r\n// const addContact = createAction('contacts/add', text => ({\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     ...text,\r\n//   },\r\n// }));\r\n// const deleteContact = createAction('contacts/delete');\r\n// const changeFilter = createAction('contacts/filteredContacts');\r\n\r\n// const addContact = text => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     ...text,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const changeFilter = value => ({\r\n//   type: types.FILTERED_CONTACTS,\r\n//   payload: value,\r\n// });\r\n\r\n// export default { addContact, deleteContact, changeFilter };\r\n","import { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\r\nimport style from './Filter.module.css';\r\n\r\nfunction Filter({ filter, changeFilter }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name:\r\n      <input\r\n        className={style.input__field}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={e => changeFilter(e.currentTarget.value)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({ filter: filter });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: value => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import './App.css';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport Filter from './Components/Filter/Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './phonebook-actions';\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n  addContact,\r\n} from '../Phonebook/contacts-operations';\r\n\r\nexport const items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => {\r\n    console.log(payload);\r\n    if (state.some(({ name }) => name === payload.name)) {\r\n      alert(`Sorry, ${payload.name} is already in contacts list`);\r\n      return state;\r\n    }\r\n    return [payload, ...state];\r\n  },\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       if (state.some(({ name }) => name === payload.name)) {\r\n//         alert(`Sorry, ${payload.name} is already in contacts list`);\r\n//         return;\r\n//       }\r\n//       return [payload, ...state];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTERED_CONTACTS:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport const loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './Phonebook/phonebook-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n// import 'node_modules/modern-normalize/modern-normalize.css';\r\n// import 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}